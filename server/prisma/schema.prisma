generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model category {
  categoryId   String    @id @default(uuid())
  categoryName String?   @db.VarChar(255)
  product      product[]
}

model product {
  productId     String   @id  @default(uuid())
  productName   String?  @db.VarChar(255)
  price         Decimal  @db.Decimal(10, 2)
  stockQuantity Int
  createdAt     DateTime
  categoryId    String
  imageData     String
  category      category @relation(fields: [categoryId], references: [categoryId], map: "Product_categoryId_fkey")
  orderitem orderItems[]
  @@index([categoryId], map: "Product_categoryId_fkey")
}

model user {
  userId      String       @id  @default(uuid())
  username    String       @unique(map: "User_username_key")
  password    String
  role        String
  isActive    Boolean
  createdAt   DateTime
  updatedAt   DateTime
  userdetails userdetails?
  myorder order[]
}

model userdetails {
  userDetailId String @id  @default(uuid())
  userId       String @unique(map: "UserDetails_userId_key")
  firstName    String
  lastName     String
  contact      String
  address      String
  imageData    String?
  email        String @unique(map: "UserDetails_email_key")
  user         user   @relation(fields: [userId], references: [userId], map: "UserDetails_userId_fkey")
}

model order{
  orderId String @id @default(uuid())
  userId String
  user user @relation(fields: [userId], references: [userId])
  orderDate DateTime
  totalAmount Decimal @db.Decimal(14,2)
  shippingCost Decimal @db.Decimal(14,2)
  discount Decimal @db.Decimal(14,2)
  status String
  address String
  paymentMethod String
  orderitem orderItems[]
}

model orderItems{
  orderItemId String @id @default(uuid())
  orderId String
  order order @relation(fields: [orderId], references: [orderId])
  producId String
  product product @relation(fields: [producId], references: [productId])
  quantity Int
  price Decimal @db.Decimal(14,2)
}

// model payment{
//   paymentId String @id @default(uuid())
//   orderId String @unique
//   order order @relation(fields: [orderId], references: [orderId])
//   paymentMethod String
//   paymentDate DateTime
// }